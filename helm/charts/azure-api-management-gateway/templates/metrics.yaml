apiVersion: v1
kind: ConfigMap
metadata:
  name: "{{ .Release.Name }}-sputnik-metrics" 
data:
  statsd.yaml: ""
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-sputnik-metrics"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Release.Name }}-sputnik-metrics"
  template:
    metadata:
      labels:
        app: "{{ .Release.Name }}-sputnik-metrics"
    spec:
      containers:
      - name: "{{ .Release.Name }}-sputnik-metrics"
        image: mymharbor.lcwaikiki.local/docker.io/prom/statsd-exporter:v0.22.5
        imagePullPolicy: IfNotPresent
        ports:
        - name: tcp
          containerPort: 9102
        - name: udp
          containerPort: 8125
          protocol: UDP
        args:
          - --statsd.mapping-config=/tmp/statsd.yaml
          - --statsd.listen-udp=:8125
          - --web.listen-address=:9102      
          - --no-statsd.parse-dogstatsd-tags
          - --no-statsd.parse-influxdb-tags
          - --no-statsd.parse-librato-tags
          - --no-statsd.parse-signalfx-tags       
          - --log.level=debug
        volumeMounts:
          - mountPath: /tmp
            name: "{{ .Release.Name }}-sputnik-metrics"
      volumes:
        - name: "{{ .Release.Name }}-sputnik-metrics"
          configMap:
            name: "{{ .Release.Name }}-sputnik-metrics"
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-sputnik-metrics"
spec:
  type: ClusterIP
  ports:
  - name: udp
    port: 8125
    targetPort: 8125
    protocol: UDP
  - name: tcp
    port: 9102
    targetPort: 9102
    protocol: TCP
  selector:
    app: "{{ .Release.Name }}-sputnik-metrics"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Release.Name }}-udpproxy"  
spec:
  replicas: 1
  selector:
    matchLabels:      
      app: "{{ .Release.Name }}-udpproxy"
  template:
    metadata:      
      labels:
        app: "{{ .Release.Name }}-udpproxy"
    spec:
      containers:
      - env:
        - name: UDPPROXYSRC
          value: "0.0.0.0:8125"
        - name: UDPPROXYDST
          value: "{{ .Release.Name }}-sputnik-metrics:8125"
        image: mymharbor.lcwaikiki.local/devops/udpproxy:1.0.8
        imagePullPolicy: Always        
        name: "{{ .Release.Name }}-udpproxy"
        ports:
        - containerPort: 8125
          name: udp
          protocol: UDP   
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File        
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30  
---
apiVersion: v1
kind: Service
metadata:
  name: "{{ .Release.Name }}-udpproxy"  
spec:
  ports:
  - name: udp
    port: 8125
    protocol: UDP
    targetPort: 8125
  selector:
    app: "{{ .Release.Name }}-udpproxy"
  type: ClusterIP
